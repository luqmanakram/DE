#!/usr/bin/env python
# coding: utf-8

import pandas as pd
import argparse
from sqlalchemy import create_engine
from time import time
import os

def main(params):
    user = params.user
    password = params.password
    host = params.host
    port = params.port
    db = params.db
    table_name = params.table_name
   # parquet_name = 'output.parquet'
    csv_path = params.url

    #os.system(f"wget {url} -O {parquet_name}")

    engine = create_engine(f'postgresql://{user}:{password}@{host}:{port}/{db}')
   
    df_iter=pd.read_csv(csv_path,iterator=True, chunksize=100000)

    df = next(df_iter)

    df.tpep_pickup_datetime = pd.to_datetime(df.tpep_pickup_datetime)
    df.tpep_dropoff_datetime = pd.to_datetime(df.tpep_dropoff_datetime)

    df.head(n=0).to_sql(name = table_name ,con=engine , if_exists='replace')
    df.to_sql(name = table_name , con=engine , if_exists='append')


    while True:
        t_start=time()
        df=next(df_iter)

        df.tpep_pickup_datetime = pd.to_datetime(df.tpep_pickup_datetime)
        df.tpep_dropoff_datetime = pd.to_datetime(df.tpep_dropoff_datetime)

        df.to_sql(name = table_name , con=engine , if_exists='append')
        t_end = time()

        
        print("Insterted Another Chunk ..., took %.3f second" %(t_end-t_start))
        
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Ingest Parquet data to Postgres')

    # user
    # password
    # host
    # port
    # database
    # name
    # table name
    # url of the Parquet file

    parser.add_argument('--user', help='user name for the postgres')
    parser.add_argument('--password', help='password for the postgre')
    parser.add_argument('--host', help='host for postgres')
    parser.add_argument('--port', help='port for the postgres')
    parser.add_argument('--db', help='database name for the postgres')
    parser.add_argument('--table_name', help='name of the table where we will write the results to')
    parser.add_argument('--url', help='url of of the parquet fi')

    args = parser.parse_args()

    main(args)
